{"version":3,"file":"react-query-hydration.development.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../src/hydration/hydration.ts","../src/react/QueryClientProvider.tsx","../src/hydration/react.tsx"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import type { QueryClient } from '../core/queryClient'\nimport type { Query, QueryState } from '../core/query'\nimport type {\n  MutationKey,\n  MutationOptions,\n  QueryKey,\n  QueryOptions,\n} from '../core/types'\nimport type { Mutation, MutationState } from '../core/mutation'\n\n// TYPES\n\nexport interface DehydrateOptions {\n  dehydrateMutations?: boolean\n  dehydrateQueries?: boolean\n  shouldDehydrateMutation?: ShouldDehydrateMutationFunction\n  shouldDehydrateQuery?: ShouldDehydrateQueryFunction\n}\n\nexport interface HydrateOptions {\n  defaultOptions?: {\n    queries?: QueryOptions\n    mutations?: MutationOptions\n  }\n}\n\ninterface DehydratedMutation {\n  mutationKey?: MutationKey\n  state: MutationState\n}\n\ninterface DehydratedQuery {\n  cacheTime: number\n  queryHash: string\n  queryKey: QueryKey\n  state: QueryState\n}\n\nexport interface DehydratedState {\n  mutations: DehydratedMutation[]\n  queries: DehydratedQuery[]\n}\n\nexport type ShouldDehydrateQueryFunction = (query: Query) => boolean\n\nexport type ShouldDehydrateMutationFunction = (mutation: Mutation) => boolean\n\n// FUNCTIONS\n\nfunction serializePositiveNumber(value: number): number {\n  return value === Infinity ? -1 : value\n}\n\nfunction deserializePositiveNumber(value: number): number {\n  return value === -1 ? Infinity : value\n}\n\nfunction dehydrateMutation(mutation: Mutation): DehydratedMutation {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state,\n  }\n}\n\n// Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\nfunction dehydrateQuery(query: Query): DehydratedQuery {\n  return {\n    cacheTime: serializePositiveNumber(query.cacheTime),\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash,\n  }\n}\n\nfunction defaultShouldDehydrateMutation(mutation: Mutation) {\n  return mutation.state.isPaused\n}\n\nfunction defaultShouldDehydrateQuery(query: Query) {\n  return query.state.status === 'success'\n}\n\nexport function dehydrate(\n  client: QueryClient,\n  options?: DehydrateOptions\n): DehydratedState {\n  options = options || {}\n\n  const mutations: DehydratedMutation[] = []\n  const queries: DehydratedQuery[] = []\n\n  if (options?.dehydrateMutations !== false) {\n    const shouldDehydrateMutation =\n      options.shouldDehydrateMutation || defaultShouldDehydrateMutation\n\n    client\n      .getMutationCache()\n      .getAll()\n      .forEach(mutation => {\n        if (shouldDehydrateMutation(mutation)) {\n          mutations.push(dehydrateMutation(mutation))\n        }\n      })\n  }\n\n  if (options?.dehydrateQueries !== false) {\n    const shouldDehydrateQuery =\n      options.shouldDehydrateQuery || defaultShouldDehydrateQuery\n\n    client\n      .getQueryCache()\n      .getAll()\n      .forEach(query => {\n        if (shouldDehydrateQuery(query)) {\n          queries.push(dehydrateQuery(query))\n        }\n      })\n  }\n\n  return { mutations, queries }\n}\n\nexport function hydrate(\n  client: QueryClient,\n  dehydratedState: unknown,\n  options?: HydrateOptions\n): void {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return\n  }\n\n  const mutationCache = client.getMutationCache()\n  const queryCache = client.getQueryCache()\n\n  const mutations = (dehydratedState as DehydratedState).mutations || []\n  const queries = (dehydratedState as DehydratedState).queries || []\n\n  mutations.forEach(dehydratedMutation => {\n    mutationCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.mutations,\n        mutationKey: dehydratedMutation.mutationKey,\n      },\n      dehydratedMutation.state\n    )\n  })\n\n  queries.forEach(dehydratedQuery => {\n    const query = queryCache.get(dehydratedQuery.queryHash)\n\n    // Do not hydrate if an existing query exists with newer data\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {\n        query.setState(dehydratedQuery.state)\n      }\n      return\n    }\n\n    // Restore query\n    queryCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.queries,\n        queryKey: dehydratedQuery.queryKey,\n        queryHash: dehydratedQuery.queryHash,\n        cacheTime: deserializePositiveNumber(dehydratedQuery.cacheTime),\n      },\n      dehydratedQuery.state\n    )\n  })\n}\n","import React from 'react'\n\nimport { QueryClient } from '../core'\n\nconst QueryClientContext = (() => {\n  const context = React.createContext<QueryClient | undefined>(undefined)\n  if (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.ReactQueryClientContext = context\n  }\n  return context\n})()\n\nfunction getQueryClientContext() {\n  return typeof window !== 'undefined'\n    ? // @ts-ignore\n      (window.ReactQueryClientContext as React.Context<\n        QueryClient | undefined\n      >) ?? QueryClientContext\n    : QueryClientContext\n}\n\nexport const useQueryClient = () => {\n  const queryClient = React.useContext(getQueryClientContext())\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\nexport interface QueryClientProviderProps {\n  client: QueryClient\n}\n\nexport const QueryClientProvider: React.FC<QueryClientProviderProps> = ({\n  client,\n  children,\n}) => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  const Context = getQueryClientContext()\n\n  return <Context.Provider value={client}>{children}</Context.Provider>\n}\n","import React from 'react'\n\nimport { useQueryClient } from '../react'\nimport { hydrate, HydrateOptions } from './hydration'\n\nexport function useHydrate(state: unknown, options?: HydrateOptions) {\n  const queryClient = useQueryClient()\n\n  const optionsRef = React.useRef(options)\n  optionsRef.current = options\n\n  // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current)\n    }\n  }, [queryClient, state])\n}\n\nexport interface HydrateProps {\n  state?: unknown\n  options?: HydrateOptions\n}\n\nexport const Hydrate: React.FC<HydrateProps> = ({\n  children,\n  options,\n  state,\n}) => {\n  useHydrate(state, options)\n  return children as React.ReactElement<any>\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","serializePositiveNumber","value","Infinity","deserializePositiveNumber","dehydrateMutation","mutation","mutationKey","options","state","dehydrateQuery","query","cacheTime","queryKey","queryHash","defaultShouldDehydrateMutation","isPaused","defaultShouldDehydrateQuery","status","dehydrate","client","mutations","queries","dehydrateMutations","shouldDehydrateMutation","getMutationCache","getAll","forEach","push","dehydrateQueries","shouldDehydrateQuery","getQueryCache","hydrate","dehydratedState","mutationCache","queryCache","dehydratedMutation","build","defaultOptions","dehydratedQuery","get","dataUpdatedAt","setState","QueryClientContext","context","React","createContext","undefined","window","ReactQueryClientContext","getQueryClientContext","useQueryClient","queryClient","useContext","Error","useHydrate","optionsRef","useRef","current","useMemo","Hydrate","children"],"mappings":"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"}
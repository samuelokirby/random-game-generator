import { QueryFunction, QueryKey } from '../core/types';
import { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types';
export declare function useInfiniteQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(options: UseInfiniteQueryOptions<TData, TError, TQueryFnData>): UseInfiniteQueryResult<TData, TError>;
export declare function useInfiniteQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(queryKey: QueryKey, options?: UseInfiniteQueryOptions<TData, TError, TQueryFnData>): UseInfiniteQueryResult<TData, TError>;
export declare function useInfiniteQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(queryKey: QueryKey, queryFn: QueryFunction<TQueryFnData | TData>, options?: UseInfiniteQueryOptions<TData, TError, TQueryFnData>): UseInfiniteQueryResult<TData, TError>;

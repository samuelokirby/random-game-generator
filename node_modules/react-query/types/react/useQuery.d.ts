import { QueryFunction, QueryKey } from '../core/types';
import { UseQueryOptions, UseQueryResult } from './types';
export declare function useQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(options: UseQueryOptions<TData, TError, TQueryFnData>): UseQueryResult<TData, TError>;
export declare function useQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(queryKey: QueryKey, options?: UseQueryOptions<TData, TError, TQueryFnData>): UseQueryResult<TData, TError>;
export declare function useQuery<TData = unknown, TError = unknown, TQueryFnData = TData>(queryKey: QueryKey, queryFn: QueryFunction<TQueryFnData | TData>, options?: UseQueryOptions<TData, TError, TQueryFnData>): UseQueryResult<TData, TError>;
